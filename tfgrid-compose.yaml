name: tfgrid-ai-agent
version: 0.3.0
description: AI-powered coding agent with loop technique for safe AI coding

# Pattern compatibility
patterns:
  recommended: single-vm
  supported:
    - single-vm
    # Future: - k3s

# Resource requirements
resources:
  cpu:
    min: 2
    recommended: 4
  memory:
    min: 4096
    recommended: 8192
  disk:
    min: 50
    recommended: 100
  ports:
    - 22:ssh

# System dependencies
dependencies:
  system:
    - git
    - curl
    - wget
  external:
    - nodejs: ">=18.0.0"
    - npm: ">=9.0.0"
    - qwen-cli: "@qwen-code/qwen-code"

# Deployment hooks (called by deployer)
hooks:
  setup: deployment/setup.sh
  configure: deployment/configure.sh
  healthcheck: deployment/healthcheck.sh

# Environment variables (optional)
environment:
  - name: QWEN_API_KEY
    required: false
    secret: true
    description: "Qwen API key for AI access"
    
  - name: PROJECT_WORKSPACE
    default: /home/developer/code
    description: "Agent workspace directory"
  
  - name: RUNTIME_USER
    default: developer
    description: "User to run agent scripts as"

# Logging configuration
logging:
  method: systemd
  service: tfgrid-ai-agent
  location: /opt/ai-agent/logs/

# Status check
status:
  method: systemd
  service: tfgrid-ai-agent

# App-specific commands (v0.11.0+)
commands:
  create:
    script: /opt/ai-agent/scripts/create-project.sh
    description: Create a new AI coding project
    args: "[project-name]"
    interactive: true
    allocate_tty: true
  
  select-project:
    script: /opt/ai-agent/scripts/select-project-command.sh
    description: Select active project for commands
    args: "[project-name]"
    save_to_context: active_project
    
  run:
    script: /opt/ai-agent/scripts/interactive-wrapper.sh run
    description: Start agent loop for a project
    args: "[project-name]"
    uses_context: active_project
    interactive: true
    allocate_tty: false
    
  stop:
    script: /opt/ai-agent/scripts/interactive-wrapper.sh stop
    description: Stop agent loop for a project
    args: "[project-name]"
    uses_context: active_project
    
  monitor:
    script: /opt/ai-agent/scripts/interactive-wrapper.sh monitor
    description: Monitor project progress
    args: "[project-name]"
    uses_context: active_project
    interactive: true
    allocate_tty: true
    
  projects:
    script: /opt/ai-agent/scripts/status-projects.sh
    description: Show status of all projects
    
  remove:
    script: /opt/ai-agent/scripts/interactive-wrapper.sh remove
    description: Delete a project
    args: "[project-name]"
    uses_context: active_project
    
  logs:
    script: /opt/ai-agent/scripts/interactive-wrapper.sh logs
    description: View project logs
    args: "[project-name]"
    uses_context: active_project
    
  summary:
    script: /opt/ai-agent/scripts/interactive-wrapper.sh summary
    description: Show project summary
    args: "[project-name]"
    uses_context: active_project
    
  restart:
    script: /opt/ai-agent/scripts/interactive-wrapper.sh restart
    description: Restart agent for a project
    args: "[project-name]"
    uses_context: active_project
    allocate_tty: false
    
  stopall:
    script: /opt/ai-agent/scripts/stopall-projects.sh
    description: Stop all running projects
    
  edit:
    script: /opt/ai-agent/scripts/interactive-wrapper.sh edit
    description: Edit project configuration
    args: "[project-name]"
    
  login:
    script: /opt/ai-agent/scripts/login.sh
    description: Authenticate with Qwen (OAuth)
    interactive: true
    allocate_tty: true
    
  whoami:
    script: /opt/ai-agent/scripts/whoami.sh
    description: Check Qwen authentication status
